树的非递归先序遍历：
先访问根结点，然后弹出根结点，并把根结点的右孩子和左孩子压入栈，再弹出左孩子，并把左孩子的子孙如上压入并弹出，最后弹出右孩子，如上压入右孩子的子孙并弹出。

栈的大小空间为O(h)，h为二叉树高度。时间方面，每个节点都被压入栈一次，弹出栈一次，访问一次，复杂度为O(n)。

树的非递归中序遍历：
先将根入栈，中序遍历需要最先访问左孩子，因此需要一直遍历到左孩子结点为空的结点才进行弹出，直到弹出根，然后再访问右孩子。

树的非递归后序遍历：
两个栈实现，第一个栈左右根，第二个栈根右左，再把第二个栈弹出。

题目：
根据中序遍历和前序遍历的结果，重建二叉树。

