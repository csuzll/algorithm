题目：
给定一个double类型的浮点数base和int类型的整数exponent。求base的exponent次方。不能使用库函数，同时不需要考虑大数问题。


思路：
当指数为负数的时候，可以先对指数求绝对值，然后算出次方的结果之后再取倒数。如果底数为0，则直接返回0。此时的次方在数学上是没有意义的。

除此之外，我们要注意：由于计算机表示小数（包括float和double型小数）都有误差，我们不能直接用等号（==）判断两个小数是否相等。如果两个小数的差的绝对值很小，比如小于0.0000001，就可以认为它们相等。

在计算次方的时候，除了简单的遍历，我们可以使用如下公式进行计算，来减少计算量：
a^n = a^(n/2) * a^(n/2)，n 为偶数
a^n = a^((n-1)/2) * a^((n-1)/2) * a, n 为奇数


python中判断小数相等(切记：不能使用 ==)：
math.isclose(a, b, rel_tol=1e-5)

或者计算这两个数的差的绝对值小于某个可以接受的值来判断判断它们是否相等,比如用
fabs(a-b) < 0.000001

定义一个精度，用差的绝对值比较，在精度范围内就认为是相等的；大小可以直接比较。