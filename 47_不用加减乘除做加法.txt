题目：
写一个函数，求两个整数之和，要求在函数体内不得使用+、-、*、/四则运算符号。

思路：
计算二进制值相加： 5-101，7-111
第一步：相加各位的值，不算进位，得到010，二进制每位相加就相当于各位做异或操作，101^111=010。

第二步：计算进位值，得到1010，相当于各位做与操作得到101，再向左移一位得到1010，(101&111)<<1。

第三步：重复上述两步， 各位相加 010^1010=1000，进位值为100=(010&1010)<<1。

继续重复上述两步：1000^100 = 1100，进位值为0，跳出循环，1100为最终结果。

即：
可以采用位操作来实现，利用异或运算来计算不带进位的加法结果，利用与运算计算进位的标志，然后将这两个结果作为初始的两个整数，重复上述过程，直至进位标志位0.


注意：由于python长整数类型可以表示无限位，所以需要人为设置边界，避免死循环。所以可以设置成32位。


python的无符号数，需要判断结果的正负，越界检查

方法二：使用sum()


变形：
不使用新的变量，交换两个变量的值。